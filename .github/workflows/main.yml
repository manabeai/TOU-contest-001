name: Run Tests

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.7'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install six

    - name: Run tests
      run: |
        python rime/rime.py test

    - name: Create format.sh file
      run: |
        cat << 'EOF' > format.sh
        #!/bin/bash
        #find . -wholename "rime-out/tests"
        input() {
            find . -wholename "./rime-out/tests" | while read inpath; do
                judgedata_path="./judgedata/"
                inputfiles=$(ls $inpath | grep ".in$")
                cnt=1
                for i in $inputfiles; do
                    #echo "cp" $inpath"/"$i $judgedata_path"/in"$cnt".txt"
                    echo $cnt $i
                    echo $cnt $i | cat >>$judgedata_path"/"case_mapping.txt
                    cp $inpath"/"$i $judgedata_path"/in"$cnt".txt"
                    cnt=$(($cnt + 1))
                done
                cnt=$(($cnt - 1))
                echo $cnt | cat >$judgedata_path"/"case.txt
                #echo $cnt
            done
        }
        
        output() {
            find . -wholename "./rime-out/tests" | while read outpath; do
                judgedata_path="./judgedata/"
                outputfiles=$(ls $outpath | grep ".diff$")
                cnt=1
                for i in $outputfiles; do
                    #echo $outpath"/"$i $judgedata_path"/out"$cnt".txt"
                    cp $outpath"/"$i $judgedata_path"/out"$cnt".txt"
                    cnt=$(($cnt + 1))
                done
                #echo $cnt
            done
        }
        
        mkdir judgedata
        input
        output
        EOF
        chmod +x format.sh
    
    - name: Generate proccess.sh
      run: |
        cat << 'EOF' > process.sh
        #!/bin/bash
        
        # 生成物を保存するディレクトリ
        mkdir -p generated
        
        # ルートディレクトリの各サブディレクトリを処理
        for dir in ./*/; do
          echo "Checking: ${dir}"
          # tests ディレクトリが存在し、ディレクトリ名がrimeではない場合
          if [ -d "${dir}tests" ] && [ "$(basename "$dir")" != "rime" ]; then
            echo "Processing: ${dir}"
        
            # 対象ディレクトリに移動してフォーマット実行
            (
              cd "$dir" || exit 1
              ../format.sh tests
            )
        
        
            cd "$dir"
            # judgedata が生成されていればリネームして移動
            if [ -d "judgedata" ]; then
              mv judgedata ../generated/"$(basename "$dir")"
              rm -rf ../judgedata
            fi
            cd ..
          fi
        done
        EOF
        chmod +x process.sh
    - name: Ensure process.sh is executable
      run: chmod +x process.sh
      
    - name: Run proccess.sh
      run: ./process.sh
    - name: Clean up
      run: rm format.sh process.sh && ls -la && ls generated -la && ls generated/Connect-Puzzle -la
    - name: Archive judgedata
      uses: actions/upload-artifact@v4
      with:
        name: judgedata
        path: ./generated