<h2>Skill Tree</h2>

<p>とあるゲームをプレイしています。そのゲームはスキルツリー形式でスキルを習得していきます。</p>
<p>スキルは \(N\) 種類あり、スキル \(i\) の習得コストは \(A_i\) です。</p>
<p>また、\(M\) 個の有向辺が与えられます。\(i\) 番目の辺 \((1 \leq i \leq M)\) はスキル \(u_i\) から \(v_i\) に伸びる辺です。</p>

<p>スキルの習得条件は以下のとおりです。</p>
<ul>
  <li>スキル \(i\) が習得済みである場合に、スキル \(i\) から伸びている辺の先のスキルを習得する。</li>
  <li>現在習得可能な \(K\) 個のスキル \(S_1, S_2 \dots S_K\) を習得する。</li>
</ul>

<p>あなたは、スキル \(X\) の習得を目指しています。ただし最小コストで習得したいので、最小コストでスキル \(X\) を習得できるようなスキルの順番を1つ出力してください。</p>
<p>ただし、スキル \(X\) を習得できない場合は <code>-1</code> を出力してください。</p>

<h3>制約</h3>
<ul>
  <li>\(2 \leq N \leq 2 \times 10^5\)</li>
  <li>\(1 \leq M \leq \min(\frac{N(N - 1)}{2}, 2 \times 10^5)\)</li>
  <li>\(1 \leq A_i \leq 10^9\)</li>
  <li>\(1 \leq u_i, v_i, K, X, S_i \leq N\)</li>
  <li>\(u_i \ne v_i\)</li>
  <li>\(i \ne j\) ならば、\((u_i, v_i) \ne (u_j, v_j)\)</li>
  <li>閉路は存在しない</li>
</ul>

<h3>入力</h3>
<p>入力は以下の形式で標準入力から与えられます。</p>
<pre>
\(N\) \(M\) \(K\) \(X\)
\(A_1\) \(A_2\) \(\dots\) \(A_N\)
\(S_1\) \(S_2\) \(\dots\) \(S_K\)
\(u_1\) \(v_1\)
\(u_2\) \(v_2\)
\(\vdots\)
\(u_M\) \(v_M\)
</pre>

<h3>出力</h3>
<p>最小コストでスキル \(X\) を習得するために必要なスキル数と、スキルの順番を出力してください。</p>
<p>条件を満たすものであれば、どれを出力しても正解となります。</p>
<p>スキル \(X\) を習得できない場合は、<code>-1</code> を出力してください。</p>

<h3>入力例1</h3>
<pre>
4 4 1 4
1 1 2 2
1
1 2
1 3
2 4
3 4
</pre>

<h3>出力例1</h3>
<pre>
3
1 2 4
</pre>

<p>スキル \(4\) を習得することができるスキルの順番は以下の \(2\) つです。</p>
<ol>
  <li>\(1 \to 2 \to 4\)</li>
  <li>\(1 \to 3 \to 4\)</li>
</ol>

<p>1 つ目のコストの総和は \(4\) です。2 つ目のコストの総和は \(5\) なので、小さい方である \(1 \to 2 \to 4\) を出力します。</p>

<h3>入力例2</h3>
<pre>
4 2 1 4
1 2 3 4
1
1 2
3 4
</pre>

<h3>出力例2</h3>
<pre>
-1
</pre>

<p>スキル \(4\) を習得することはできません。</p>
